{
  "openapi": "3.1.0",
  "info": { "title": "ADRASHA AUTH-SERVICE API Docs", "version": "1.0.0" },
  "servers": [{ "url": "http://localhost:8080" }],
  "security": [{ "BearerAuthentication": [] }],
  "paths": {
    "/auth/updateRole": {
      "put": {
        "tags": ["UserDetails Management"],
        "summary": "Update Role",
        "description": "Update role with given userId",
        "operationId": "updateRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AddRoleDTO" }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "security": [{ "BearerAuthentication": [] }]
      }
    },
    "/auth/resetPassword": {
      "post": {
        "tags": ["UserDetails Management"],
        "summary": "Reset Password",
        "description": "Update Current Password with given password",
        "operationId": "resetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/PasswordResetRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "security": [{ "BearerAuthentication": [] }]
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Authentication Management"],
        "summary": "Register New User",
        "description": "Returns a user after registration",
        "operationId": "registerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/RegistrationRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Authentication Management"],
        "summary": "Login for user",
        "description": "Returns a user object after successful login",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginRequest" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/users/{id}": {
      "delete": {
        "tags": ["UserDetails Management"],
        "summary": "delete security credintials of user",
        "description": "Admin Role required. User will not be able to login again if deleted",
        "operationId": "deleteUserByAdmin",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid" }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "security": [{ "BearerAuthentication": [] }]
      }
    },
    "/auth/users/me": {
      "delete": {
        "tags": ["UserDetails Management"],
        "summary": "delete security credintials of current logged in user",
        "description": "User will not be able to login again if deleted",
        "operationId": "deleteCurrentUser",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "404": {
            "description": "User Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ErrorResponse" }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ApiResponse" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          }
        },
        "security": [{ "BearerAuthentication": [] }]
      }
    }
  },
  "components": {
    "schemas": {
      "AddRoleDTO": {
        "type": "object",
        "properties": {
          "userId": { "type": "string", "format": "uuid" },
          "role": { "type": "string", "enum": ["USER", "ADMIN", "ASHA"] }
        },
        "required": ["role", "userId"]
      },
      "ContentDisposition": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "name": { "type": "string" },
          "filename": { "type": "string" },
          "charset": { "type": "string" },
          "size": { "type": "integer", "format": "int64", "deprecated": true },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "modificationDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "deprecated": true
          },
          "attachment": { "type": "boolean" },
          "formData": { "type": "boolean" },
          "inline": { "type": "boolean" }
        }
      },
      "DefaultHttpStatusCode": {
        "allOf": [{ "$ref": "#/components/schemas/HttpStatusCode" }]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "detailMessageArguments": { "type": "array", "items": {} },
          "typeMessageCode": { "type": "string" },
          "detailMessageCode": { "type": "string" },
          "titleMessageCode": { "type": "string" },
          "body": { "$ref": "#/components/schemas/ProblemDetail" },
          "statusCode": {
            "oneOf": [
              { "$ref": "#/components/schemas/DefaultHttpStatusCode" },
              { "$ref": "#/components/schemas/HttpStatus" }
            ]
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": { "type": "string" }
            },
            "properties": {
              "location": { "type": "string", "format": "uri" },
              "allow": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/HttpMethod" },
                "uniqueItems": true
              },
              "host": {
                "type": "object",
                "properties": {
                  "hostString": { "type": "string" },
                  "address": {
                    "type": "object",
                    "properties": {
                      "hostAddress": { "type": "string" },
                      "address": { "type": "string", "format": "byte" },
                      "hostName": { "type": "string" },
                      "linkLocalAddress": { "type": "boolean" },
                      "multicastAddress": { "type": "boolean" },
                      "anyLocalAddress": { "type": "boolean" },
                      "loopbackAddress": { "type": "boolean" },
                      "siteLocalAddress": { "type": "boolean" },
                      "mcglobal": { "type": "boolean" },
                      "mcnodeLocal": { "type": "boolean" },
                      "mclinkLocal": { "type": "boolean" },
                      "mcsiteLocal": { "type": "boolean" },
                      "mcorgLocal": { "type": "boolean" },
                      "canonicalHostName": { "type": "string" }
                    }
                  },
                  "port": { "type": "integer", "format": "int32" },
                  "unresolved": { "type": "boolean" },
                  "hostName": { "type": "string" }
                }
              },
              "cacheControl": { "type": "string" },
              "contentLanguage": { "type": "string" },
              "etag": { "type": "string" },
              "accept": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/MediaType" }
              },
              "accessControlAllowOrigin": { "type": "string" },
              "accessControlAllowMethods": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/HttpMethod" }
              },
              "accessControlAllowHeaders": {
                "type": "array",
                "items": { "type": "string" }
              },
              "accessControlExposeHeaders": {
                "type": "array",
                "items": { "type": "string" }
              },
              "accessControlAllowCredentials": { "type": "boolean" },
              "accessControlMaxAge": { "type": "integer", "format": "int64" },
              "accessControlRequestMethod": {
                "$ref": "#/components/schemas/HttpMethod"
              },
              "accessControlRequestHeaders": {
                "type": "array",
                "items": { "type": "string" }
              },
              "acceptPatch": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/MediaType" }
              },
              "basicAuth": { "type": "string", "writeOnly": true },
              "acceptLanguage": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "range": { "type": "string" },
                    "weight": { "type": "number", "format": "double" }
                  }
                }
              },
              "acceptLanguageAsLocales": {
                "type": "array",
                "items": { "type": "string" }
              },
              "acceptCharset": {
                "type": "array",
                "items": { "type": "string" }
              },
              "bearerAuth": { "type": "string", "writeOnly": true },
              "connection": { "type": "array", "items": { "type": "string" } },
              "contentDisposition": {
                "$ref": "#/components/schemas/ContentDisposition"
              },
              "expires": { "type": "integer", "format": "int64" },
              "ifMatch": { "type": "array", "items": { "type": "string" } },
              "ifNoneMatch": { "type": "array", "items": { "type": "string" } },
              "ifUnmodifiedSince": { "type": "integer", "format": "int64" },
              "origin": { "type": "string" },
              "pragma": { "type": "string" },
              "range": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/HttpRange" }
              },
              "upgrade": { "type": "string" },
              "vary": { "type": "array", "items": { "type": "string" } },
              "ifModifiedSince": { "type": "integer", "format": "int64" },
              "contentType": { "$ref": "#/components/schemas/MediaType" },
              "contentLength": { "type": "integer", "format": "int64" },
              "empty": { "type": "boolean" },
              "all": {
                "type": "object",
                "additionalProperties": { "type": "string" },
                "writeOnly": true
              },
              "lastModified": { "type": "integer", "format": "int64" },
              "date": { "type": "integer", "format": "int64" }
            }
          }
        }
      },
      "HttpMethod": {},
      "HttpRange": {},
      "HttpStatus": {
        "allOf": [{ "$ref": "#/components/schemas/HttpStatusCode" }],
        "enum": [
          "100 CONTINUE",
          "101 SWITCHING_PROTOCOLS",
          "102 PROCESSING",
          "103 EARLY_HINTS",
          "103 CHECKPOINT",
          "200 OK",
          "201 CREATED",
          "202 ACCEPTED",
          "203 NON_AUTHORITATIVE_INFORMATION",
          "204 NO_CONTENT",
          "205 RESET_CONTENT",
          "206 PARTIAL_CONTENT",
          "207 MULTI_STATUS",
          "208 ALREADY_REPORTED",
          "226 IM_USED",
          "300 MULTIPLE_CHOICES",
          "301 MOVED_PERMANENTLY",
          "302 FOUND",
          "302 MOVED_TEMPORARILY",
          "303 SEE_OTHER",
          "304 NOT_MODIFIED",
          "305 USE_PROXY",
          "307 TEMPORARY_REDIRECT",
          "308 PERMANENT_REDIRECT",
          "400 BAD_REQUEST",
          "401 UNAUTHORIZED",
          "402 PAYMENT_REQUIRED",
          "403 FORBIDDEN",
          "404 NOT_FOUND",
          "405 METHOD_NOT_ALLOWED",
          "406 NOT_ACCEPTABLE",
          "407 PROXY_AUTHENTICATION_REQUIRED",
          "408 REQUEST_TIMEOUT",
          "409 CONFLICT",
          "410 GONE",
          "411 LENGTH_REQUIRED",
          "412 PRECONDITION_FAILED",
          "413 PAYLOAD_TOO_LARGE",
          "413 REQUEST_ENTITY_TOO_LARGE",
          "414 URI_TOO_LONG",
          "414 REQUEST_URI_TOO_LONG",
          "415 UNSUPPORTED_MEDIA_TYPE",
          "416 REQUESTED_RANGE_NOT_SATISFIABLE",
          "417 EXPECTATION_FAILED",
          "418 I_AM_A_TEAPOT",
          "419 INSUFFICIENT_SPACE_ON_RESOURCE",
          "420 METHOD_FAILURE",
          "421 DESTINATION_LOCKED",
          "422 UNPROCESSABLE_ENTITY",
          "423 LOCKED",
          "424 FAILED_DEPENDENCY",
          "425 TOO_EARLY",
          "426 UPGRADE_REQUIRED",
          "428 PRECONDITION_REQUIRED",
          "429 TOO_MANY_REQUESTS",
          "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
          "451 UNAVAILABLE_FOR_LEGAL_REASONS",
          "500 INTERNAL_SERVER_ERROR",
          "501 NOT_IMPLEMENTED",
          "502 BAD_GATEWAY",
          "503 SERVICE_UNAVAILABLE",
          "504 GATEWAY_TIMEOUT",
          "505 HTTP_VERSION_NOT_SUPPORTED",
          "506 VARIANT_ALSO_NEGOTIATES",
          "507 INSUFFICIENT_STORAGE",
          "508 LOOP_DETECTED",
          "509 BANDWIDTH_LIMIT_EXCEEDED",
          "510 NOT_EXTENDED",
          "511 NETWORK_AUTHENTICATION_REQUIRED"
        ]
      },
      "HttpStatusCode": {
        "type": "object",
        "properties": {
          "is4xxClientError": { "type": "boolean" },
          "is5xxServerError": { "type": "boolean" },
          "is1xxInformational": { "type": "boolean" },
          "is2xxSuccessful": { "type": "boolean" },
          "is3xxRedirection": { "type": "boolean" },
          "error": { "type": "boolean" }
        }
      },
      "MediaType": {
        "type": "object",
        "properties": {
          "type": { "type": "string" },
          "subtype": { "type": "string" },
          "parameters": {
            "type": "object",
            "additionalProperties": { "type": "string" }
          },
          "qualityValue": { "type": "number", "format": "double" },
          "concrete": { "type": "boolean" },
          "wildcardType": { "type": "boolean" },
          "wildcardSubtype": { "type": "boolean" },
          "subtypeSuffix": { "type": "string" },
          "charset": { "type": "string" }
        }
      },
      "ProblemDetail": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "format": "uri" },
          "title": { "type": "string" },
          "status": { "type": "integer", "format": "int32" },
          "detail": { "type": "string" },
          "instance": { "type": "string", "format": "uri" },
          "properties": { "type": "object", "additionalProperties": {} }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "timestamp": { "type": "string", "format": "date-time" },
          "success": { "type": "boolean" },
          "status": { "type": "integer", "format": "int32" },
          "message": { "type": "string" },
          "payload": {}
        }
      },
      "ApiError": {
        "type": "object",
        "properties": {
          "field": { "type": "string" },
          "message": { "type": "string" }
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "status": { "type": "integer", "format": "int32" },
          "errorCode": { "type": "string" },
          "message": { "type": "string" },
          "errors": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApiError" }
          },
          "timestamp": { "type": "string", "format": "date-time" }
        }
      },
      "PasswordResetRequest": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 8
          },
          "newPassword": {
            "type": "string",
            "maxLength": 2147483647,
            "minLength": 8
          }
        },
        "required": ["newPassword", "oldPassword"]
      },
      "RegistrationRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "admin",
            "maxLength": 50,
            "minLength": 0
          },
          "password": {
            "type": "string",
            "example": "admin@123",
            "maxLength": 100,
            "minLength": 8
          }
        },
        "required": ["password", "username"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "username": { "type": "string", "example": "admin", "minLength": 1 },
          "password": {
            "type": "string",
            "example": "admin@123",
            "maxLength": 2147483647,
            "minLength": 8
          }
        },
        "required": ["password", "username"]
      }
    },
    "securitySchemes": {
      "BearerAuthentication": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
