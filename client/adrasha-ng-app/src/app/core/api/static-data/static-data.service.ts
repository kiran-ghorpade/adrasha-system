/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * ADRASHA MASTERDATA-SERVICE API Docs
 * OpenAPI spec version: 1.0.0
 */
import {
  HttpClient
} from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse
} from '@angular/common/http';

import {
  Injectable
} from '@angular/core';

import {
  Observable
} from 'rxjs';

import type {
  StaticDataDTO
} from '../../model/masterdataService';



type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  context?: HttpContext;
  observe?: any;
  params?: HttpParams | {
    [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};



@Injectable({ providedIn: 'root' })
export class StaticDataService {
  constructor(
    private http: HttpClient,
  ) {} getRoles<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getRoles<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getRoles<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getRoles<TData = StaticDataDTO[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/masterdata/roles`,options
    );
  }
 getRequestStatus<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getRequestStatus<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getRequestStatus<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getRequestStatus<TData = StaticDataDTO[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/masterdata/request-statuses`,options
    );
  }
 getPovertyStatuses<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getPovertyStatuses<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getPovertyStatuses<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getPovertyStatuses<TData = StaticDataDTO[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/masterdata/poverty-statuses`,options
    );
  }
 getLocationTypes<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getLocationTypes<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getLocationTypes<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getLocationTypes<TData = StaticDataDTO[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/masterdata/location-types`,options
    );
  }
 getHealthCenterTypes<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getHealthCenterTypes<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getHealthCenterTypes<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getHealthCenterTypes<TData = StaticDataDTO[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/masterdata/health-center-types`,options
    );
  }
 getGenders<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getGenders<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getGenders<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getGenders<TData = StaticDataDTO[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/masterdata/genders`,options
    );
  }
 getAgeGroups<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getAgeGroups<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getAgeGroups<TData = StaticDataDTO[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getAgeGroups<TData = StaticDataDTO[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/masterdata/age-groups`,options
    );
  }
};

export type GetRolesClientResult = NonNullable<StaticDataDTO[]>
export type GetRequestStatusClientResult = NonNullable<StaticDataDTO[]>
export type GetPovertyStatusesClientResult = NonNullable<StaticDataDTO[]>
export type GetLocationTypesClientResult = NonNullable<StaticDataDTO[]>
export type GetHealthCenterTypesClientResult = NonNullable<StaticDataDTO[]>
export type GetGendersClientResult = NonNullable<StaticDataDTO[]>
export type GetAgeGroupsClientResult = NonNullable<StaticDataDTO[]>
