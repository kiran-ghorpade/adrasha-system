/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * ADRASHA AUTH-SERVICE API Docs
 * OpenAPI spec version: 1.0.0
 */
import {
  HttpClient
} from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse
} from '@angular/common/http';

import {
  Injectable
} from '@angular/core';

import {
  Observable
} from 'rxjs';

import type {
  AuthTokenResponse,
  LoginRequest,
  RegistrationRequest,
  UserDTO
} from '../../model/auth-service';



type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  context?: HttpContext;
  observe?: any;
  params?: HttpParams | {
    [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};



@Injectable({ providedIn: 'root' })
export class AuthenticationManagementService {
  constructor(
    private http: HttpClient,
  ) {} registerUser<TData = UserDTO>(
    registrationRequest: RegistrationRequest, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    registerUser<TData = UserDTO>(
    registrationRequest: RegistrationRequest, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    registerUser<TData = UserDTO>(
    registrationRequest: RegistrationRequest, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;registerUser<TData = UserDTO>(
    registrationRequest: RegistrationRequest, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `http://localhost:8080/auth/register`,
      registrationRequest,options
    );
  }
 loginUser<TData = AuthTokenResponse>(
    loginRequest: LoginRequest, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    loginUser<TData = AuthTokenResponse>(
    loginRequest: LoginRequest, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    loginUser<TData = AuthTokenResponse>(
    loginRequest: LoginRequest, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;loginUser<TData = AuthTokenResponse>(
    loginRequest: LoginRequest, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `http://localhost:8080/auth/login`,
      loginRequest,options
    );
  }
};

export type RegisterUserClientResult = NonNullable<UserDTO>
export type LoginUserClientResult = NonNullable<AuthTokenResponse>
