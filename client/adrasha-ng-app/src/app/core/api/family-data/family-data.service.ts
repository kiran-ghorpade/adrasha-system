/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * ADRASHA DATA-SERVICE API Docs
 * OpenAPI spec version: 1.0.0
 */
import {
  HttpClient
} from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse
} from '@angular/common/http';

import {
  Injectable
} from '@angular/core';

import {
  Observable
} from 'rxjs';

import type {
  FamilyDataResponseDTO,
  FamilyPageResponseDTO,
  FamilyRegistrationDTO,
  FamilyUpdateDTO,
  GetFamilyCount1Params,
  GetFamilyPageParams
} from '../../model/dataService';



type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  context?: HttpContext;
  observe?: any;
  params?: HttpParams | {
    [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};



@Injectable({ providedIn: 'root' })
export class FamilyDataService {
  constructor(
    private http: HttpClient,
  ) {} getFamily<TData = FamilyDataResponseDTO>(
    id: string, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getFamily<TData = FamilyDataResponseDTO>(
    id: string, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getFamily<TData = FamilyDataResponseDTO>(
    id: string, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getFamily<TData = FamilyDataResponseDTO>(
    id: string, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/data/families/${id}`,options
    );
  }
 updateFamily<TData = FamilyDataResponseDTO>(
    id: string,
    familyUpdateDTO: FamilyUpdateDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    updateFamily<TData = FamilyDataResponseDTO>(
    id: string,
    familyUpdateDTO: FamilyUpdateDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    updateFamily<TData = FamilyDataResponseDTO>(
    id: string,
    familyUpdateDTO: FamilyUpdateDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;updateFamily<TData = FamilyDataResponseDTO>(
    id: string,
    familyUpdateDTO: FamilyUpdateDTO, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.put<TData>(
      `http://localhost:8080/data/families/${id}`,
      familyUpdateDTO,options
    );
  }
 deleteFamily<TData = void>(
    id: string, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    deleteFamily<TData = void>(
    id: string, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    deleteFamily<TData = void>(
    id: string, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;deleteFamily<TData = void>(
    id: string, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.delete<TData>(
      `http://localhost:8080/data/families/${id}`,options
    );
  }
 getFamilyPage<TData = FamilyPageResponseDTO>(
    params: GetFamilyPageParams, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getFamilyPage<TData = FamilyPageResponseDTO>(
    params: GetFamilyPageParams, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getFamilyPage<TData = FamilyPageResponseDTO>(
    params: GetFamilyPageParams, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getFamilyPage<TData = FamilyPageResponseDTO>(
    params: GetFamilyPageParams, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/data/families`,{
    ...options,
        params: {...params.filterDTO, ...params.pageable, ...options?.params},}
    );
  }
 createFamily<TData = FamilyDataResponseDTO>(
    familyRegistrationDTO: FamilyRegistrationDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    createFamily<TData = FamilyDataResponseDTO>(
    familyRegistrationDTO: FamilyRegistrationDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    createFamily<TData = FamilyDataResponseDTO>(
    familyRegistrationDTO: FamilyRegistrationDTO, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;createFamily<TData = FamilyDataResponseDTO>(
    familyRegistrationDTO: FamilyRegistrationDTO, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `http://localhost:8080/data/families`,
      familyRegistrationDTO,options
    );
  }
 getFamilyCount1<TData = number>(
    params: GetFamilyCount1Params, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getFamilyCount1<TData = number>(
    params: GetFamilyCount1Params, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getFamilyCount1<TData = number>(
    params: GetFamilyCount1Params, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getFamilyCount1<TData = number>(
    params: GetFamilyCount1Params, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/data/families/count`,{
    ...options,
        params: {...params.filterDTO, ...options?.params},}
    );
  }
};

export type GetFamilyClientResult = NonNullable<FamilyDataResponseDTO>
export type UpdateFamilyClientResult = NonNullable<FamilyDataResponseDTO>
export type DeleteFamilyClientResult = NonNullable<void>
export type GetFamilyPageClientResult = NonNullable<FamilyPageResponseDTO>
export type CreateFamilyClientResult = NonNullable<FamilyDataResponseDTO>
export type GetFamilyCount1ClientResult = NonNullable<number>
