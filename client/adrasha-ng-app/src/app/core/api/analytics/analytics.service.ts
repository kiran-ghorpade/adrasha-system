/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * ADRASHA ANALYTICS-SERVICE API Docs
 * OpenAPI spec version: 1.0.0
 */
import {
  HttpClient
} from '@angular/common/http';
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse
} from '@angular/common/http';

import {
  Injectable
} from '@angular/core';

import {
  Observable
} from 'rxjs';

import type {
  FamilyStats,
  MasterdataStats,
  MemberStats,
  UserStats
} from '../../model/analyticsService';



type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  context?: HttpContext;
  observe?: any;
  params?: HttpParams | {
    [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};



@Injectable({ providedIn: 'root' })
export class AnalyticsService {
  constructor(
    private http: HttpClient,
  ) {} getUserStats<TData = UserStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getUserStats<TData = UserStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getUserStats<TData = UserStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getUserStats<TData = UserStats>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/analytics/user/stats`,options
    );
  }
 getMemberStats<TData = MemberStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getMemberStats<TData = MemberStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getMemberStats<TData = MemberStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getMemberStats<TData = MemberStats>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/analytics/member/stats`,options
    );
  }
 getMasterDataStats<TData = MasterdataStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getMasterDataStats<TData = MasterdataStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getMasterDataStats<TData = MasterdataStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getMasterDataStats<TData = MasterdataStats>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/analytics/masterdata/stats`,options
    );
  }
 getFamilyStats<TData = FamilyStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getFamilyStats<TData = FamilyStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getFamilyStats<TData = FamilyStats>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getFamilyStats<TData = FamilyStats>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:8080/analytics/family/stats`,options
    );
  }
};

export type GetUserStatsClientResult = NonNullable<UserStats>
export type GetMemberStatsClientResult = NonNullable<MemberStats>
export type GetMasterDataStatsClientResult = NonNullable<MasterdataStats>
export type GetFamilyStatsClientResult = NonNullable<FamilyStats>
